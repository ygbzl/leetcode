void insert(String key, String value);
String search(String key);
String delete(String key);


If a Graph has V vertices and E edges. What is the time complexity of BFS in terms of V, E
O(V+E)

AABBCC -> BBCCAA
[]

AABBCC -> AABBCB -> AABBBB
[AABBCB, AABBCC,AABBBB]

AABBCC
3*k
.size()
n

AABBCC : What is the total number of combinations that you can generate by interchanging a letter. That will give you number of nodes(V) in the graph

V: 3^k
0(3^k);

int minTransformations(String startWord, String endWord, HashSet<String> validTransformationStrings) {
    if (validTransformationString == null){
        return -1;
    }
    
    if (startWord.equals(endWord)){
        return 0;
    }
    
    validTransformationString.add(startWord);
    validTransformationString.add(endWord);
    
    Queue<String> queue = new LinkedList<String>();
    HashSet<String> hash = new HashSet<String>();
    
    queue.offer(startWord);
    hash.add(startWord);
    
    
    int pathLen = 0;
    whiel (!q.isEmpty()){
        pathLen++;
        int size = queue.size();
      //  for (int i = 0; i < size; i++){
            String word = queue.poll();
            // O(k)
            for (String nextWord : getNext(word, validTransformationString)){
                if (hash.contains(nextWord)){
                    continue;
                }
                if (nextWord.equals(end)){
                    return pathLen;
                }
                hash.add(nextWord);
                queue.offer(nextWord);
            }
      //  }
    }
    
    return -1;
}


private String replace(String startWord, int index, char c){
    // word.length() == k
    // O(k)
    char[] chars = s.toCharArray();
    chars[index] = c;
    return new String(chars);
}

private ArrayList<String> getNext(String word, HashSet<String> validTransformationString){
    //O(k)
    ArrayList<String> nextWords = new ArrayList<String>();
    // O(1)*3 = O(1)
    for (char c = 'A'; c <= 'C'; c++){
        // O(k)
        for (int i = 0; i < word.length(); i++){
            if (c == word.charAt(i)){
                continue;
            }
            String next = replace(word, i, c);
            if(validTransformationString.contains(next)){
                nextWords.add(next);
            }
        }
    }
    
    return nextWords;
}



hashtable, BST, unordered map, balanced BST

LC 17 原題

project: When you did not have enough information when you get the requirement, how did you solve that?

dict:  int parseTo real english word, which data structure?    hastset trie  time Complexity?

3 sum,   follow up: with hashmap?

LC 155  O(1)space   不让用xor， 比O(n)更好的方法， 如果输入的是linkedlist

validate binary search tree

//challenging project

Sysmetric Tree

implement a queue using an array   dequeue, enqueue

tree zigzag traversal


报一个刚刚的面经：Write a function that takes as input an array of objects/strings.  The objects will be either integers or character representations of +, -, and * (let's ignore division at the moment).  It should return the result by applying the arithmetical operations defined in the Reverse Polish Notation of the array (also known as postfix notation).

# Examples:
# Postfix             Infix     Solution
# [1, 3, +] =>        1 + 3  =>  4
# [6, 3, -] =>        6 - 3 => 3
# [2, 3, +, 5, *]  => (2 + 3) * 5 => 5 * 5 => 25
# [2, 3, 5, *, +]  => 2 + (3 * 5) => 2 + 15 => 17

# Corner cases
# [1,2,1,+]
# [1,2,+,+]
# [1,2,!]



2点面经：
口音听不太听出来哪国面试官，带点口音，人很nice
* 介绍一个在project中别人没想到而你想到的能改进项目的点子
* 写代码：打印一个带规律的matrix，1,2,3; 2,4,6; 3,6,9;  
* 两个全是integer没有sort带重复数字的文件，用linux命令找出两个文件中重复的数字（写代码）
    * follow up1: 用O(n)复杂度(可不用linux)？（说想法）
    * follow up2: 如果两个文件太大一次不能读入内存怎么办？(说想法)
* （写代码）OOD，设计一个Zoo，里面有各种动物，考虑笼子类型，食物类型，饲养员，中间穿插问LinkedList和ArrayList的区别。
* （写代码）判断integer某个bit是不是1.
* 问问题。


lc 373
lc 88  follow up: k arrays

painting app

drawling tool

Swap kth node from the start and end of the list

面经：第一题，打印matrix，matrix[i][j]=（i+1）*(j+1)，其实就这么简单然后我生生想复杂了，傻到家了……第二题，单向链表找倒数第k个，然后follow up是就遍历一遍找到，我没答上来……最后一问是ood，关于用户在不用餐厅订餐，要有user，restaurant，menu，order，payment等类，然后设计……

面经：1. Linux：print一个文件里所有数字的和   2. MaxStack: push pop getMax O(1)，不能用java的stack类   3. 设计一个online book reader store

why amazon?

lc 155  follow up: missing的不止一个， 开头不一定是0, 不能用xor, 小于O(N)







Swap the kth element from the beginning with the kth element from the end  of the linked list:
Eg:

1 -> 2 -> 3 -> 4 -> 5

if k=2, swap 2 and 4.

k = 8 longer

retun head of the linkedlist
two pointers: fast , slow
fast pointer move k steps, record it, and then the slower pointer come in, the both move

class ListNode {
    int val;
    ListNode next;
    ListNode(int x) {val = x;}
}
//dummy node, dummy.next = target node, access of the previous, I can just access the next node and next.next
public ListNode swap2(ListNode head, int k) {
    ListNode dummy = new ListNode(0);
    dummy.next = head;
    ListNode fast = dummy;
    for(int i = 0; i < k - 1; i++) {
        fast = fast.next;
        if(fast.next == null) //longer
            return dummy.next;
    }
    ListNode kPre = fast;//position k-1  value == 1 
    fast = fast.next; // fastval == 2  1
    ListNode slow = dummy; 
    while(fast.next != null) {//inital slow = 0, fast = 2 1,3  2,4 3,5
        fast = fast.next;
        slow = slow.next;//slow -> node of 3 4
    }
    //kPre -> 1  slow -> 3 then swap            kPre = 0 slow = 4
    ListNode temp = KPre.next.next; //store 3   2
    ListNode temp2 = KPre.next; //store 2       1
    KPre.next.next = slow.next.next; //2->5     1 -> null
    slow.next.next = temp;//4 -> 3              5 -> 2
    KPre.next = slow.next;//1 -> 4              0 -> 5
    slow.next = temp; //3 -> 2                  4 -> 1
                        //0 5 2 3 4 1
    return dummy.next; //5
}


/*
public ListNode swap(ListNode head, int k) {
    ListNode itr = head;
    for(int i = 0; i < k - 1; i++) {
        itr = itr.next;
        if(itr = null) //longer
            return head;
    }
    ListNode temp = itr;
    ListNode slow = head;
    while(itr != null) {
        slow = slow.next;
        itr = itr.next;
    }
    int value = slow.val;
    slow.val = temp.val;
    temp.val = value;

    return head;
    
}
*/


/**
 * Create a class (or classes) to represent a pile of standard playing cards.
 *
 * A playing card has a face value and a suit.  There are 13 distinct face values: 2,3,4,5,6,7,8,9,10,Jack,Queen,King,Ace. There 
 * are 4 distinct suits: Hearts, Clubs, Diamonds, and Spades.  That results in 4x13=52 distinct cards.
 * 
 * A pile should be initially created as empty.
 *
 * The pile should have methods to:
 * 1) Initialize it to a full deck of cards. 
 * 2) Shuffle it, without changing the cards in the pile, make their order completely random.
 * 3) Remove and return the top card from the pile.
 * 4) Put a card onto the top of the pile.
 */

 cc 150 Deck of cards

 lc 116 follow up: 把这个树打印出来

 面经：问很多简历还有OOD的问题，inherit, interface, encapsulation, 然后写一个card game的OOD，coding方面的问题全是在OOD的过程中加进去的，我把整个OOD基本框架都写了，大概有60行。然后针对这个OOD，写了一个找出手牌里most popular element。我先写的暴力，时间不够了，口述的hashmap优化. 非主流的面试方法。

 lc 160

 返回两个linkedlist里重复的node
 bst kth largest element

 lc116，follow up1 order traversal，follow up2 优化treenode class interface，然后问了two sum，follow up1 不sort，follow up2 不用map

 给一个每行都是的数字的文件的文件名， 求这些数字的和， follow up: 如果文件超过最大内存 


 Me:
给了一个文件名格式：p_{project_name}_{company_name}.{ext} ， 找出：project_name=beta, company={google, Amazon}, ext={h,txt}的所有文件，只能用linux语句来完成。
问一下这个怎么写啊。。。
Me:
awk '$1 ~/^beta_(google|Amazon)\.(h|txt)$/' filenames  这样不知道可不可以   如果已经有文件名都存在一个file里的话

面经：proud project; 题：Given a array Array[0, n-1], find an efficient way to answer query Gcd Query(l, r). where l >=0 and l<=n-1, r>=l and r<=n-1.

给一个array和target找到subarray的和等于target  lc325
word ladder2


面经  merge k sorted list，但我答得好差。情景是什么amazon每个服务器的search结果，说要返回给用户。
就是说亚麻油很多服务器，搜索都能得到独立的结果，问如何返回这些结果给用户。你就跟他探讨到底想给用户返回啥，得到的数据是啥样的，最后慢慢就讨论到合并list了



报个面经：给List<String> exceptions, 输出每个分钟出现多少次SomeException, 没有的不算，Mon 2/16/2017 10:15 [ERROR] SomeException
Mon 2/16/2017 10:15 [ERROR] SomeException
Mon 2/16/2017 10:16 [INFO] No problems
Mon 2/16/2017 10:20 [ERROR] SomeException
Mon 2/16/2017 10:30 [ERROR] SomeException
Mon 2/16/2017 10:30 [ERROR] AnotherException
Mon 2/16/2017 10:16 [WARN] OtherException

15 -> 2
20 -> 1
30 -> 1




报一个（可能没什么帮助）面经：two sum和merge sort 前十分钟问了java基础问题 各种list map set的implementation 区别 什么时候用哪种和time complexity 求好运


第一题 逐层打印Tree
第二题 处理亚马逊员工数据


lc 150

fisher shuffle

lc204

给一个String array， 查找某个string，  改成binary search，

给一个hour minute 输出夹角
vector 和 arraylist有什么区别